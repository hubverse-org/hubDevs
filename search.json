[{"path":[]},{"path":"https://hubverse-org.github.io/hubDevs/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying standards acceptable behavior. Enforcement responsibility Code Conduct Committee, take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Instances abusive, harassing, otherwise unacceptable behavior may reported member Code Conduct Committee. complaints reviewed investigated promptly fairly. Code Conduct Committee use Enforcement Manual determining consequences action deem violation Code Conduct. community leaders Code Conduct Committee members obligated respect privacy security reporter incident.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to hubDevs","title":"Contributing to hubDevs","text":"outlines propose change hubDevs. general info contributing , hubverse packages, please see hubverse contributing guide. can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to hubDevs","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). procedures contributing bigger changes, code particular, generally follow advised tidyverse dev team, including following tidyverse style guide code recording user facing changes NEWS.md.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to hubDevs","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"hubverse-org/hubDevs\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to hubDevs","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to hubDevs","text":"Please note hubDevs project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Consortium Infectious Disease Modeling Hubs Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/articles/hotfixes.html","id":"step-1-create-a-fix-and-pull-request","dir":"Articles","previous_headings":"","what":"Step 1: Create a Fix and Pull Request","title":"Releasing Hotfixes","text":", get report (let’s call issue number 143) something broken need fix immediately. Normally, fix bugs, check new bugfix branch main branch. ’s catch: check main branch grab feature1 well, yet ready production intended feature2 released along side. case, need create hotfix, create branch last tag (case 0.14.0). IMPORTANT: create hotfix, name branch <author>/hotfix/<issue>. using /hotfix/ branch name, GitHub workflows know test package released versions R-universe.     made hotfix (test course, always make sure verify fixes), push open pull request:","code":"(main)$ git describe #| 0.14.0-3-ggpne (main)$ git switch --detach 0.14.0 # checkout the tag #| HEAD is now at efgh Merge pull request #140 from hubverse-org/release-0.14.0 ((0.14.0))$ git switch -c znk/hotfix/143 # create a new branch #| switched to new branch 'znk/hotfix/143' (znk/hotfix/143)$ gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     branch znk/hotfix/143     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne\"     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout znk/hotfix/143     commit id: \"yzAB\" (znk/hotfix/143)$ git push -u origin znk/hotfix/143"},{"path":"https://hubverse-org.github.io/hubDevs/articles/hotfixes.html","id":"step-2-ensure-checks-pass-and-create-tag","dir":"Articles","previous_headings":"","what":"Step 2: Ensure Checks pass and create tag","title":"Releasing Hotfixes","text":"check hotfix break existing tests, automatically run pull request. confirmed everything works expected, next step bump version add tag. tag allow release patch version.     **Note 0.14.1 tag znk/hotfix/143 branch bottom. point, checks run pull request conflict DESCRIPTION NEWS.md files. okay. update version numbers add NEWS. merge point. next step release patch.","code":"(znk/hotfix/143)$ git add DESCRIPTION NEWS.md (znk/hotfix/143)$ git commit -m 'bump version to 0.14.1' (znk/hotfix/143)$ git tag -s 0.14.1 -m 'flipped retroencabulator switch option' (znk/hotfix/143)$ git push (znk/hotfix/143)$ git push --tags gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     branch znk/hotfix/143     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne\"     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout znk/hotfix/143     commit id: \"yzAB\"     commit id: \"CDEF\" tag: \"0.14.1\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/hotfixes.html","id":"step-3-release-the-patch","dir":"Articles","previous_headings":"","what":"Step 3: Release the Patch","title":"Releasing Hotfixes","text":"release patch using method described releases chapter. can either release GitHub directly via GitHub CLI. Importantly, create release, create release new tag. can done via GitHub interface using GitHub’s CLI tool.","code":"(znk/hotfix/143)$ gh release create 0.14.1"},{"path":"https://hubverse-org.github.io/hubDevs/articles/hotfixes.html","id":"step-4-resolve-conflicts-and-merge","dir":"Articles","previous_headings":"","what":"Step 4: Resolve Conflicts and Merge","title":"Releasing Hotfixes","text":"Now ’ve created release, resolve conflicts DESCRIPTION NEWS files merge back main (note: create two merge commits, ’m showing one diagram make cleaner):     Now patch place released version devel version hubverse package, means can continue develop normal merge next feature ready:","code":"gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     branch znk/hotfix/143     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne\"     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout znk/hotfix/143     commit id: \"yzAB\"     commit id: \"CDEF\" tag: \"0.14.1\"     checkout main     merge znk/hotfix/143 id: \"DeFn\" gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     branch znk/hotfix/143     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne\"     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout znk/hotfix/143     commit id: \"yzAB\"     commit id: \"CDEF\" tag: \"0.14.1\"     checkout main     merge znk/hotfix/143 id: \"DeFn\"     checkout feature2     commit id: \"GHIJ\"     commit id: \"KLMN\"     checkout main     merge feature2 id: \"FnNL\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-checklists.html","id":"release-checklist","dir":"Articles","previous_headings":"","what":"Release Checklist","title":"Release Checklists","text":"Create new branch main called <author>/release/<X.Y.Z> (MUST pattern, e.g. ls/release/0.1.6) (R packages) Update version number DESCRIPTION check Remotes: --date1. Use usethis::use_version() update version number add new NEWS.md section. (R packages) Check new authors/contributors accounted DESCRIPTION Proofread NEWS.md changelog.md update version number Commit, push changes, create draft pull request (tests run released versions dependencies) (R packages) package CRAN, follow steps release CRAN. good place start open template release issue using usethis::use_release_issue() follow instructions. Get review another member Hubverse dev team merge approval Checkout main branch make sure pull merged changes. Add new tag (annotated (-) signed (-s) preferred) name “ X.Y.Z” push create release github new tag. R, can use usethis::use_github_release(). release process CRAN releases requires extra time attention. good place start open template release issue using usethis::use_release_issue() follow instructions. first release CRAN, make sure : Add CRAN installation command installation instructions README.Rmd. Add CRAN badge README.Rmd using usethis::use_cran_badge(). Rebuild README.md. Use devtools::check(remote = TRUE, manual = TRUE) check package locally. Use devtools::check_win_devel() check package devel version R https://win-builder.r-project.org/. Record results checks respond concisely NOTEs addressed cran-comments.md file. contents file included package submission CRAN. See using cran-comments.md communicate CRAN. package cran-comments.md file, can create one using usethis::use_cran_comments(). Make sure changes committed pushed release branch. Remove Remotes: items DESCRIPTION desc package: (COMMIT, restore later git restore DESCRIPTION). run devtools::release() follow prompts. run bunch confirmation checks finally submit package CRAN. run system(\"git restore DESCRIPTION\") restore Remotes: field DESCRIPTION file. CRAN submission, add commit CRAN_SUBMISSION file push release branch. package rejected CRAN, make necessary changes, update cran-comments.md file summary changes made, bump version using usethis::use_version(\"patch\") resubmit CRAN. continue Release steps","code":"# example: create a signed (-s) tag for version 3.3.3 git tag -s v3.3.3 -m '<short explanation of what changed>' git push --tags desc::desc()$del(\"Remotes\")$write()"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-checklists.html","id":"release-to-cran","dir":"Articles","previous_headings":"","what":"Release to CRAN","title":"Release Checklists","text":"release process CRAN releases requires extra time attention. good place start open template release issue using usethis::use_release_issue() follow instructions. first release CRAN, make sure : Add CRAN installation command installation instructions README.Rmd. Add CRAN badge README.Rmd using usethis::use_cran_badge(). Rebuild README.md. Use devtools::check(remote = TRUE, manual = TRUE) check package locally. Use devtools::check_win_devel() check package devel version R https://win-builder.r-project.org/. Record results checks respond concisely NOTEs addressed cran-comments.md file. contents file included package submission CRAN. See using cran-comments.md communicate CRAN. package cran-comments.md file, can create one using usethis::use_cran_comments(). Make sure changes committed pushed release branch. Remove Remotes: items DESCRIPTION desc package: (COMMIT, restore later git restore DESCRIPTION). run devtools::release() follow prompts. run bunch confirmation checks finally submit package CRAN. run system(\"git restore DESCRIPTION\") restore Remotes: field DESCRIPTION file. CRAN submission, add commit CRAN_SUBMISSION file push release branch. package rejected CRAN, make necessary changes, update cran-comments.md file summary changes made, bump version using usethis::use_version(\"patch\") resubmit CRAN. continue Release steps","code":"desc::desc()$del(\"Remotes\")$write()"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-checklists.html","id":"post-release-checklist","dir":"Articles","previous_headings":"","what":"Post Release Checklist","title":"Release Checklists","text":"Immediately release, follow steps set version back development Create new branch main called post-release-X.Y.Z Set project development version : * Adding .9000 version number (indicate development version) * Adding new heading NEWS.md changelog.md: ## <package name> (development). R packages can usethis::use_dev_version(). commit, push changes, create pull request merge (approval)","code":""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-checklists.html","id":"subsequent-pr-checklist","dir":"Articles","previous_headings":"","what":"Subsequent PR Checklist","title":"Release Checklists","text":"Subsequent PRs business--usual development. PRs tested development versions packages must work merged. important remember PRs focus independent features. want add new feature fix bug, two separate PRs. strategy reduces size PR, making easier review. Create new branch main called <initials>/<feature>/<issue>. (e.g. ak/change-check-fail-class--print/111, authored Anna Krystalli change check/fail class print methods fix issue #111). Update NEWS.md changelog.md (sure acknowledge non-core contributors tagging GitHub handle version number) Get review member hubverse team merge main approval. Caveats: change development version number, unless important feature changes required upstream package (see development version number). Review often brings potential non-blocking features/bug fixes orthogonal original PR. cases, instead creating PR merge original PR, ’s best create new issue PR review , merging, create new PR fix issue. helps keep disparate bugfixes features separate. introducing breaking changes, must merge main changes tested communicated community.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-checklists.html","id":"hotfix-checklist","dir":"Articles","previous_headings":"","what":"Hotfix Checklist","title":"Release Checklists","text":"hotfix bug fix independent -development features needs deployed within day. Details hotfixes can found vignette(\"hotfixes\", package = \"hubDevs\"). patch release hotfix, follow protocol: Create new branch latest tag using <author>/hotfix/<issue> (MUST pattern) Write test, fix bug, commit, push (bump version number yet) Create pull request, get review another hubverse developer, confirm checks pass released versions packages (merge yet) Update NEWS bump patch version DESCRIPTION Release hotfix branch point, conflict NEWS DESCRIPTION, ’s confirmed worked previous step. Create release tag github (using GitHub’s CLI tool: gh release create 0.14.1) Resolve conflicts PR merge main.","code":"(main)$ git switch --detach 0.14.0 # checkout the tag ((0.14.0))$ git switch -c znk/hotfix/143 # create a new branch (znk/hotfix/143)$ (znk/hotfix/143)$ git commit -m 'hotfix for #143' (znk/hotfix/143)$ git push -u origin znk/hotfix/143 # push the hotfix (znk/hotfix/143)$ git commit -m 'bump version to 0.14.1' (znk/hotfix/143)$ git tag -s 0.14.1 -m 'flipped retroencabulator switch option' (znk/hotfix/143)$ git push (znk/hotfix/143)$ git push --tags"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"executive-summary","dir":"Articles","previous_headings":"","what":"Executive Summary","title":"Introduction to the release process","text":"release process now general workflow can help reduce size pull requests: Iterate small bug fixes PRs branches, merging main stable development branch ready, bump version, add annotated git tag, release Bump version main back development version steps instructions specific R packages, largely process-based can apply Python packages well.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to the release process","text":"August 2024, hubverse packages available Hubverse R-Universe new versions checked hourly. allows users get --date versions Hubverse packages built system without running GitHub API query attempts. order maintain quality, packages sent R-Universe formally released GitHub (specified packages.json configuration file). allows us incrementally add new experimental, non-breaking features without changing stable deployments. R-universe, pull request merged main branch effectively meant release new version. Ideally, meant Git history look like series adjacent belt loops:     However, pattern often emerges one feature particular release desired , release directly main, graph looks like thundercloud:     problem second graph , number extra features grows, size PR release becomes larger larger. Moreover, exact changes needed original PR mixed changes child branches, meaning difficult retrospectively review PR. R-universe, builds can pinned Releases specific tags, can give git graph looks similar first graph, can also allow developers work parallel independent features, allowing users intermittently test features installing default branch GitHub.","code":"gitGraph     commit id: \"abcd\"     commit id: \"efgh (0.14.0)\"     branch feature1     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne (0.14.1)\"     branch feature2     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout main     merge feature2 id: \"punx (0.14.2)\" gitGraph     commit id: \"abcd\"     commit id: \"efgh (0.14.0)\"     branch feature1     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     branch feature2     checkout feature2     commit id: \"qrst\"     checkout feature1     commit id: \"uvwx\"     checkout feature2     commit id: \"yz12\"     checkout feature1     merge feature2 id: \"xu12\"     checkout main     merge feature1 id: \"gpxe (0.14.1)\" gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout main     merge feature1 id: \"gpne\"     merge feature2 id: \"punx\"     branch release     checkout release     commit id: \"2zy1\"     checkout main     merge release id: \"1u2n\" tag: \"0.14.1\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"before","dir":"Articles","previous_headings":"","what":"Before the R-Universe","title":"Introduction to the release process","text":"R-universe, pull request merged main branch effectively meant release new version. Ideally, meant Git history look like series adjacent belt loops:     However, pattern often emerges one feature particular release desired , release directly main, graph looks like thundercloud:     problem second graph , number extra features grows, size PR release becomes larger larger. Moreover, exact changes needed original PR mixed changes child branches, meaning difficult retrospectively review PR.","code":"gitGraph     commit id: \"abcd\"     commit id: \"efgh (0.14.0)\"     branch feature1     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     merge feature1 id: \"gpne (0.14.1)\"     branch feature2     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout main     merge feature2 id: \"punx (0.14.2)\" gitGraph     commit id: \"abcd\"     commit id: \"efgh (0.14.0)\"     branch feature1     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     branch feature2     checkout feature2     commit id: \"qrst\"     checkout feature1     commit id: \"uvwx\"     checkout feature2     commit id: \"yz12\"     checkout feature1     merge feature2 id: \"xu12\"     checkout main     merge feature1 id: \"gpxe (0.14.1)\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"after","dir":"Articles","previous_headings":"","what":"After the R-Universe","title":"Introduction to the release process","text":"R-universe, builds can pinned Releases specific tags, can give git graph looks similar first graph, can also allow developers work parallel independent features, allowing users intermittently test features installing default branch GitHub.","code":"gitGraph     commit id: \"abcd\"     commit id: \"efgh\" tag: \"0.14.0\"     branch feature1     branch feature2     checkout main     checkout feature1     commit id: \"ijkl\"     commit id: \"mnop\"     checkout main     checkout feature2     commit id: \"qrst\"     commit id: \"uvwx\"     checkout main     merge feature1 id: \"gpne\"     merge feature2 id: \"punx\"     branch release     checkout release     commit id: \"2zy1\"     checkout main     merge release id: \"1u2n\" tag: \"0.14.1\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"versioning","dir":"Articles","previous_headings":"","what":"Versioning","title":"Introduction to the release process","text":"hubverse built using basic semantic versioning using X.Y.Z[.9000] pattern. take previous git graph labelled version number, can see first release graph minor release, followed patch release. Everything .9000 attached considered -development. Read details examples semantic versions:     X Major version number: version number change significant breaking changes user-facing workflows. , change requires users modify scripts, breaking change.EXAMPLE: examples hubverse packages undergoing major version change, schemas v3.0.0 included breaking change switching sample/output_type_id (array) sample/output_type_id_params (object). breaking change meant non-trivial task switch v2.0.1 schema v3.0.0 users. reflected month-long timeline announcement change 2024-05-13 actual release 2024-06-18. Y Minor version number: version number change new features enhanced behaviors available users way affect users need new features use package. number grows fastes early stages development.EXAMPLE: {hubValidations} package version 0.5.0 gives users ability reduce compute time allowing sub-set configuration new output_type argument expand_model_out_grid(). Users change nothing workflows scripts see change better worse. Z Patch version number: version number change something previously broken fixed, new features added.EXAMPLE: {hubAdmin} package needed enhancement schema version 3.0.1, removed requirements CDF outputs specific pattern. actual fix something user interact , version 1.0.1 patch release. 9000 Development version indicator: version number indicates package development state potential change. main branch, indicates features patches introduced reviewed tested. version appended every successful release. development version indicator exists, documentation site extra dev/ directory contains upcoming changes can continue develop hubverse without disrupting regular documentation flow. Advice incrementing version number R Packages Book (Wickham Bryan, 2023): Increment development version, e.g. 9000 9001, ’ve added important feature (others) need able detect require presence feature. example, can happen two packages developing tandem. generally reason bother increment development version. makes -development versions special , sense, degenerate. Since don’t increment development component Git commit, package version number associated many different states package source, releases.","code":"gitGraph     commit id: \"abcd (0.13.2.9000)\"     commit id: \"efgh (0.14.0)\" tag: \"0.14.0\"     branch feature1     branch feature2     checkout main     checkout feature1     commit id: \"ijkl (0.14.0.9000)\"     commit id: \"mnop (0.14.0.9000)\"     checkout main     checkout feature2     commit id: \"qrst (0.14.0.9000)\"     commit id: \"uvwx (0.14.0.9000)\"     checkout main     merge feature1 id: \"gpne (0.14.0.9000)\"     merge feature2 id: \"punx (0.14.0.9000)\"     branch release     checkout release     commit id: \"2zy1 (0.14.1)\"     checkout main     merge release id: \"1u2n (1.14.1)\" tag: \"0.14.1\""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"release-process","dir":"Articles","previous_headings":"","what":"Release Process","title":"Introduction to the release process","text":"package ready release use Release Checklist (detailed vignette(\"release-checklists\", package = \"hubDevs\")). rationale process described proposal discussion R package release guidelines. release process assumes accumulated bugfixes /features main branch, ready release. bug needs patched immediately new features main branch yet released, create hotfix instead. Releases concept specific GitHub. hood, releases created commits tags. use GitHub web interface, can choose tag automatically created release (though tag annotated signed, see creating stronger, signed tags). releases contain summary changes happened version previous version. good example hubverse schema release notes, GitHub offers automatically fill release notes titles links pull requests populated release, good summary (assuming people create good PR titles). release created GitHub, package available R-Universe hour less. good practice create tag release way track releases even eventually move away GitHub. Better practice create annotated tags -flag, adds metadata tag, meaning moved. Even better practice create signed tags -s flag, adds cryptographic signature annotated tag metadata allows anyone verify came computer someone pretending . Zhian likes create tags via command line set git configuration use gpg signature tags releases verified. Recently, Git GitHub added support creating signatures via SSH key, lot approchable GPG. Unfortunately, create signed tag GitHub web interface must done locally. signed tag created, can go Releases tab GitHub create release (can use gh CLI utility run gh release create X.Y.Z interactively create release). Releasing package CRAN relatively straightforward process takes 5 minutes part maintainer. time sending package CRAN time becomes available public usually ranges anywhere 30 minutes two three days, depending volume feedback CRAN maintainers. CRAN submissions often back forth process, tag release confirmed CRAN accepted submission. tips CRAN submissions: first submission likely take longest (see Chapter 22 R Packages Wickham Bryan) Don’t use webform; use devtools::release() Remove Remotes: items DESCRIPTION : (restore later git restore DESCRIPTION). 1 Commit CRAN_SUBMISSION file changes missing stair can make submissions unpleasant. get nasty review Ripley, contact one hubverse maintainers backup/strategy/comiseration.","code":"git tag -s X.Y.Z -m 'summary of changes' git push --tags sed -i '' -E -e '/(Remotes:|  hubverse-org)/d' DESCRIPTION"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"non-urgent-releases-only","dir":"Articles","previous_headings":"","what":"Non-urgent releases only","title":"Introduction to the release process","text":"release process assumes accumulated bugfixes /features main branch, ready release. bug needs patched immediately new features main branch yet released, create hotfix instead.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"releases","dir":"Articles","previous_headings":"","what":"Releases","title":"Introduction to the release process","text":"Releases concept specific GitHub. hood, releases created commits tags. use GitHub web interface, can choose tag automatically created release (though tag annotated signed, see creating stronger, signed tags). releases contain summary changes happened version previous version. good example hubverse schema release notes, GitHub offers automatically fill release notes titles links pull requests populated release, good summary (assuming people create good PR titles). release created GitHub, package available R-Universe hour less. good practice create tag release way track releases even eventually move away GitHub. Better practice create annotated tags -flag, adds metadata tag, meaning moved. Even better practice create signed tags -s flag, adds cryptographic signature annotated tag metadata allows anyone verify came computer someone pretending . Zhian likes create tags via command line set git configuration use gpg signature tags releases verified. Recently, Git GitHub added support creating signatures via SSH key, lot approchable GPG. Unfortunately, create signed tag GitHub web interface must done locally. signed tag created, can go Releases tab GitHub create release (can use gh CLI utility run gh release create X.Y.Z interactively create release).","code":"git tag -s X.Y.Z -m 'summary of changes' git push --tags"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"signed-tags","dir":"Articles","previous_headings":"","what":"Signed Tags","title":"Introduction to the release process","text":"good practice create tag release way track releases even eventually move away GitHub. Better practice create annotated tags -flag, adds metadata tag, meaning moved. Even better practice create signed tags -s flag, adds cryptographic signature annotated tag metadata allows anyone verify came computer someone pretending . Zhian likes create tags via command line set git configuration use gpg signature tags releases verified. Recently, Git GitHub added support creating signatures via SSH key, lot approchable GPG. Unfortunately, create signed tag GitHub web interface must done locally. signed tag created, can go Releases tab GitHub create release (can use gh CLI utility run gh release create X.Y.Z interactively create release).","code":"git tag -s X.Y.Z -m 'summary of changes' git push --tags"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"releasing-to-cran","dir":"Articles","previous_headings":"","what":"Releasing to CRAN","title":"Introduction to the release process","text":"Releasing package CRAN relatively straightforward process takes 5 minutes part maintainer. time sending package CRAN time becomes available public usually ranges anywhere 30 minutes two three days, depending volume feedback CRAN maintainers. CRAN submissions often back forth process, tag release confirmed CRAN accepted submission. tips CRAN submissions: first submission likely take longest (see Chapter 22 R Packages Wickham Bryan) Don’t use webform; use devtools::release() Remove Remotes: items DESCRIPTION : (restore later git restore DESCRIPTION). 1 Commit CRAN_SUBMISSION file changes missing stair can make submissions unpleasant. get nasty review Ripley, contact one hubverse maintainers backup/strategy/comiseration.","code":"sed -i '' -E -e '/(Remotes:|  hubverse-org)/d' DESCRIPTION"},{"path":"https://hubverse-org.github.io/hubDevs/articles/release-process.html","id":"testing","dir":"Articles","previous_headings":"","what":"Testing","title":"Introduction to the release process","text":"Packages exist two states: released stable development. states need pass checks (R CMD check test coverage tests), challenge two versions becomes: ensure versions work versions packages? strategy three-fold: packages development tested development packages. important remember development versions must also introduce breaking changes. Testing breaking changes performed separate branch. release/hotfix, pull request, packages tested released packages ensure regressions. packages (released devel) tested weekly. helps avoid surprise reverse-dependency problems. Testing development versions packages achieved setting Remotes: section DESCRIPTION file; ensures dependencies installed GitHub workflow run, hubverse dependencies installed GitHub R-universe. releases hotfixes (detected checking branch name contains either /release/ /hotfix/, remote declarations hubverse packages removed (dependencies installed) command sed -\"\" -E -e '/[ ][ ]hubverse-org/d' DESCRIPTION.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna Krystalli. Author, maintainer. Zhian N. Kamvar. Author.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krystalli , Kamvar Z (2024). hubDevs: Utilities Creating Standardising Hubverse Packages. R package version 0.1.0, https://hubverse-org.github.io/hubDevs, https://github.com/hubverse-org/hubDevs.","code":"@Manual{,   title = {hubDevs: Utilities for Creating and Standardising Hubverse Packages},   author = {Anna Krystalli and Zhian N. Kamvar},   year = {2024},   note = {R package version 0.1.0,     https://hubverse-org.github.io/hubDevs},   url = {https://github.com/hubverse-org/hubDevs}, }"},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"hubdevs-","dir":"","previous_headings":"","what":"Utilities for Creating and Standardising Hubverse Packages","title":"Utilities for Creating and Standardising Hubverse Packages","text":"goal hubDevs provide utilities creating standardising Hubverse packages","code":""},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for Creating and Standardising Hubverse Packages","text":"can install development version hubDevs GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"hubverse-org/hubDevs\")"},{"path":[]},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"create-a-hubverse-package-skeleton","dir":"","previous_headings":"Initialise a hubverse package","what":"Create a hubverse package skeleton","title":"Utilities for Creating and Standardising Hubverse Packages","text":"First create package skeleton. creates basic infrastructure including hubverse template README, logo, community documents, MIT LICENSE initiates package git repository.","code":"library(hubDevs)  temp_dir <- tempdir() path <- fs::path(temp_dir, \"testPkg\") create_hubdev_pkg(path) #> ✔ Creating '/var/folders/p2/ywqk6z3n5nq3csvhfnvwfpzh0000gp/T/RtmpIUZtzk/testPkg/' #> ✔ Setting active project to '/private/var/folders/p2/ywqk6z3n5nq3csvhfnvwfpzh0000gp/T/RtmpIUZtzk/testPkg' #> ✔ Creating 'R/' #> ✔ Writing 'DESCRIPTION' #> Package: testPkg #> Title: What the Package Does (One Line, Title Case) #> Version: 0.0.0.9000 #> Authors@R (parsed): #>     * Anna Krystalli <annakrystalli@googlemail.com> [aut, cre] (<https://orcid.org/0000-0002-2378-4915>) #> Description: What the package does (one paragraph). #> License: `use_mit_license()`, `use_gpl3_license()` or friends to pick a #>     license #> Encoding: UTF-8 #> Roxygen: list(markdown = TRUE) #> RoxygenNote: 7.2.3 #> ✔ Writing 'NAMESPACE' #> ✔ Writing 'testPkg.Rproj' #> ✔ Adding '^testPkg\\\\.Rproj$' to '.Rbuildignore' #> ✔ Adding '.Rproj.user' to '.gitignore' #> ✔ Adding '^\\\\.Rproj\\\\.user$' to '.Rbuildignore' #> ✔ Setting active project to '<no active project>' #> ✔ Setting active project to '/private/var/folders/p2/ywqk6z3n5nq3csvhfnvwfpzh0000gp/T/RtmpIUZtzk/testPkg' #> ✔ Adding '.DS_Store', '.Rhistory', '.Rdata', '.httr-oauth', and '.secrets' to '.gitignore' and '.Rbuildignore' #>  #> ✔ Adding 'testthat' to Suggests field in DESCRIPTION #> ✔ Adding '3' to Config/testthat/edition #> ✔ Creating 'tests/testthat/' #> ✔ Writing 'tests/testthat.R' #> • Call `use_test()` to initialize a basic test file and open it for editing. #> ✔ Adding 'MIT + file LICENSE' to License #> ✔ Writing 'LICENSE' #> ✔ Writing 'LICENSE.md' #> ✔ Adding '^LICENSE\\\\.md$' to '.Rbuildignore' #> ✔ Writing 'README.Rmd' #> ✔ Adding '^README\\\\.Rmd$' to '.Rbuildignore' #> ✔ Adding Lifecycle: experimental badge to 'README.Rmd' #> • Re-knit 'README.Rmd' with `devtools::build_readme()` #> ✔ Adding CRAN status badge to 'README.Rmd' #> • Re-knit 'README.Rmd' with `devtools::build_readme()` #> ℹ Installing testPkg in temporary library #> ℹ Building #>   '/private/var/folders/p2/ywqk6z3n5nq3csvhfnvwfpzh0000gp/T/RtmpIUZtzk/testPkg/README.Rmd' #> ✔ Creating '.github/' #> ✔ Adding '^\\\\.github$' to '.Rbuildignore' #> ✔ Adding '*.html' to '.github/.gitignore' #> ✔ Writing '.github/CODE_OF_CONDUCT.md' #> ✔ Writing '.github/CONTRIBUTING.md' #> ✔ Initialising Git repo #> ✔ Adding '.quarto' to '.gitignore' #> ✔ Writing '.git/hooks/pre-commit' #> ✔ Setting active project to '<no active project>' #> /var/folders/p2/ywqk6z3n5nq3csvhfnvwfpzh0000gp/T/RtmpIUZtzk/testPkg #> ├── .Rbuildignore #> ├── .git #> │   ├── HEAD #> │   ├── config #> │   ├── description #> │   ├── hooks #> │   │   ├── README.sample #> │   │   └── pre-commit #> │   ├── info #> │   │   └── exclude #> │   ├── objects #> │   │   ├── info #> │   │   └── pack #> │   └── refs #> │       ├── heads #> │       └── tags #> ├── .github #> │   ├── .gitignore #> │   ├── CODE_OF_CONDUCT.md #> │   └── CONTRIBUTING.md #> ├── .gitignore #> ├── DESCRIPTION #> ├── LICENSE #> ├── LICENSE.md #> ├── NAMESPACE #> ├── R #> ├── README.Rmd #> ├── README.md #> ├── man #> │   └── figures #> │       └── logo.png #> ├── testPkg.Rproj #> └── tests #>     ├── testthat #>     └── testthat.R"},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"set-up-package-on-github","dir":"","previous_headings":"Initialise a hubverse package","what":"Set up package on GitHub","title":"Utilities for Creating and Standardising Hubverse Packages","text":"new package launched, can set GitHub : Note: GitHub token must rights create repository hubverse organisation succeed. function runs number internal utilities setting hubverse package GitHub: Creates repo hubverse GitHub organisation Adds details repository DESCRIPTION file Initialises pkgdown documentation including configuring site use hubStyle pkgdown template. standard R CMD CHECK test coverage linting lintr building pkgdown documentation deploying production docs GitHub Pages PR previews Netlify site","code":"use_hubdev_github()"},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"individual-utilities","dir":"","previous_headings":"","what":"Individual Utilities","title":"Utilities for Creating and Standardising Hubverse Packages","text":"high level functions wrappers number individual utilities can run separately.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"add-community-documents","dir":"","previous_headings":"Individual Utilities","what":"Add community documents","title":"Utilities for Creating and Standardising Hubverse Packages","text":"add Code Conduct Contributing guide package, run: runs use_hubdev_coc() use_hubdev_contributing() creates CODE_OF_CONDUCT.md CONTRIBUTING.md .github/ directory.","code":"use_hubdev_community()"},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"configure-pkgdown-site-to-use-hubverse-defaults","dir":"","previous_headings":"Individual Utilities","what":"Configure pkgdown site to use hubverse defaults","title":"Utilities for Creating and Standardising Hubverse Packages","text":"configure package site pkgdown hubStyle template, deploy using hubverse’s pkgdown deployment GitHub action run: function performs number actions configure hubverse package’s pkgdown site use hubStyle template docs styling. Runs use_pkgdown() initialise pkgdown documentation. Runs use_github_pages() initialise GitHub Pages package. Adds GitHub Action workflow building pkgdown documentation deploying GitHub Pages (productions) Netlify (PR previews) using use_hubdev_pkgdown_action(). Adds hubStyle repository DESCRIPTION’s Config/Needs/website property using add_website_needs(). Creates favicon package using hubStyle logo. Overwrites standard _pkgdown.yml file customised configuration use hubverse hubStyle package docs styling.","code":"use_hubdev_pkgdown()"},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Utilities for Creating and Standardising Hubverse Packages","text":"Please note hubDevs package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Utilities for Creating and Standardising Hubverse Packages","text":"Interested contributing back open-source Hubverse project? Learn get involved Hubverse Community contribute hubDevs package.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/add_website_needs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add website Needs field to DESCRIPTION — add_website_needs","title":"Add website Needs field to DESCRIPTION — add_website_needs","text":"Adds hubverve hubStyle package website need DESCRIPTION file.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/add_website_needs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add website Needs field to DESCRIPTION — add_website_needs","text":"","code":"add_website_needs()"},{"path":"https://hubverse-org.github.io/hubDevs/reference/append_hubdev_readme_footer.html","id":null,"dir":"Reference","previous_headings":"","what":"Append the standard hubverse footer to a README.Rmd — append_hubdev_readme_footer","title":"Append the standard hubverse footer to a README.Rmd — append_hubdev_readme_footer","text":"Append standard hubverse footer README.Rmd","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/append_hubdev_readme_footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append the standard hubverse footer to a README.Rmd — append_hubdev_readme_footer","text":"","code":"append_hubdev_readme_footer(   hubdocs_contribute_url =     \"https://hubverse.io/en/latest/overview/contribute.html\" )"},{"path":"https://hubverse-org.github.io/hubDevs/reference/append_hubdev_readme_footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append the standard hubverse footer to a README.Rmd — append_hubdev_readme_footer","text":"hubdocs_contribute_url Character string. URL general contributing information page hubDocs.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/create_hubdev_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create hubverse package skeleton — create_hubdev_pkg","title":"Create hubverse package skeleton — create_hubdev_pkg","text":"Create hubverse package skeleton","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/create_hubdev_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create hubverse package skeleton — create_hubdev_pkg","text":"","code":"create_hubdev_pkg(   path,   fields = list(),   copyright_holder = \"Consortium of Infectious Disease Modeling Hubs\",   organisation = \"hubverse-org\",   hubdocs_contribute_url =     \"https://hubverse.io/en/latest/overview/contribute.html\" )"},{"path":"https://hubverse-org.github.io/hubDevs/reference/create_hubdev_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create hubverse package skeleton — create_hubdev_pkg","text":"path path. exists, used. exist, created, provided parent path exists. fields named list fields add DESCRIPTION, potentially overriding default values. See use_description() can set personalized defaults using package options. copyright_holder Name copyright holder holders. defaults \"{package name} authors\"; change use CLA assign copyright single entity. organisation Character string. hubverse GitHub organisation name. user's role token's scopes must permission create repositories hubverse organisation. hubdocs_contribute_url Character string. URL general contributing information page hubDocs.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/create_hubdev_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create hubverse package skeleton — create_hubdev_pkg","text":"Path newly created project package, invisibly.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_community.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for creating community facing hubverse package documents — use_hubdev_community","title":"Helpers for creating community facing hubverse package documents — use_hubdev_community","text":"functions create community facing documents detailing contributors wider community can interact hubverse packages. function creates relevant file .github directory templates set appropriate hubverse default values.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_community.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for creating community facing hubverse package documents — use_hubdev_community","text":"","code":"use_hubdev_community(   organisation = \"hubverse-org\",   hubdocs_contribute_url =     \"https://hubverse.io/en/latest/overview/contribute.html\" )  use_hubdev_coc()  use_hubdev_contributing(   organisation = \"hubverse-org\",   hubdocs_contribute_url =     \"https://hubverse.io/en/latest/overview/contribute.html\" )"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_community.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for creating community facing hubverse package documents — use_hubdev_community","text":"organisation Character string. hubverse GitHub organisation name. user's role token's scopes must permission create repositories hubverse organisation. hubdocs_contribute_url Character string. URL general contributing information page hubDocs.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_community.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Helpers for creating community facing hubverse package documents — use_hubdev_community","text":"use_hubdev_community(): Create hubverse CODE_OF_CONDUCT.md CONTRIBUTING.md files. use_hubdev_coc(): Create hubverse CODE_OF_CONDUCT.md file. use_hubdev_contributing(): Create hubverse CONTRIBUTING.md file.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up hubverse package on GitHub — use_hubdev_github","title":"Set up hubverse package on GitHub — use_hubdev_github","text":"function runs number internal utilities setting hubverse package GitHub: Creates repo hubverse GitHub organisation Adds details repository DESCRIPTION file Initailises pkgdown documentation Creates GitHub Action workflows : standard R CMD CHECK test coverage linting lintr building pkgdown documentation deploying production docs GitHub Pages PR previews Netlify site","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up hubverse package on GitHub — use_hubdev_github","text":"","code":"use_hubdev_github(organisation = \"hubverse-org\")"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up hubverse package on GitHub — use_hubdev_github","text":"organisation Character string. hubverse GitHub organisation name. user's role token's scopes must permission create repositories hubverse organisation.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Hubverse Developer GitHub Action setup — use_hubdev_github_action","title":"Hubverse Developer GitHub Action setup — use_hubdev_github_action","text":"Sets common hubverse developer continuous integration (CI) workflows hubverse packages hosted GitHub using GitHub Actions. Available actions hosted repository hubverse-org/hubverse-developer-actions","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hubverse Developer GitHub Action setup — use_hubdev_github_action","text":"","code":"use_hubdev_github_action(name)"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_github_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hubverse Developer GitHub Action setup — use_hubdev_github_action","text":"name Name workflow, .e. name one hubverse developer action repository directories containing GitHub Action workflow .yaml file.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_lintr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a basic hubverse .lintr file from template — use_hubdev_lintr","title":"Create a basic hubverse .lintr file from template — use_hubdev_lintr","text":"Create basic hubverse .lintr file template","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_lintr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a basic hubverse .lintr file from template — use_hubdev_lintr","text":"","code":"use_hubdev_lintr()"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkg_actions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add standard GitHub Actions workflows — use_hubdev_pkg_actions","title":"Add standard GitHub Actions workflows — use_hubdev_pkg_actions","text":"Downloads standard r-lib GitHub Action workflows writes .github/workflows directory : standard R CMD CHECK (check-standard) test coverage (test-coverage) linting lintr (lint)","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkg_actions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add standard GitHub Actions workflows — use_hubdev_pkg_actions","text":"","code":"use_hubdev_pkg_actions()"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure hubverse pkgdown site — use_hubdev_pkgdown","title":"Configure hubverse pkgdown site — use_hubdev_pkgdown","text":"function performs number actions configure hubverse package's pkgdown site use hubStyle template docs styling. Runs use_pkgdown() initialise pkgdown documentation. Runs use_github_pages() initialise GitHub Pages package. Adds GitHub Action workflow building pkgdown documentation deploying GitHub Pages (productions) Netlify (PR previews) using use_hubdev_pkgdown_action(). Adds hubStyle repository DESCRIPTION's Config/Needs/website property using add_website_needs(). Creates favicon package using hubStyle logo. Overwrites standard _pkgdown.yml file customised configuration use hubverse hubStyle package docs styling.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure hubverse pkgdown site — use_hubdev_pkgdown","text":"","code":"use_hubdev_pkgdown(add_logo = FALSE)"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure hubverse pkgdown site — use_hubdev_pkgdown","text":"add_logo Logical. Whether add logo package.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the hubdev custom pkgdown GitHub Action — use_hubdev_pkgdown_action","title":"Use the hubdev custom pkgdown GitHub Action — use_hubdev_pkgdown_action","text":"functions creates pkgdown-netlify-preview.yaml action .github/workflows directory. action follows standard pkgdown publishing gh-pages event merge main branch can also set publish internal PR previews Netlify.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the hubdev custom pkgdown GitHub Action — use_hubdev_pkgdown_action","text":"","code":"use_hubdev_pkgdown_action(remove_std = TRUE)"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the hubdev custom pkgdown GitHub Action — use_hubdev_pkgdown_action","text":"remove_std Logical. Whether remove standard pkgdown action exists.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_pkgdown_action.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use the hubdev custom pkgdown GitHub Action — use_hubdev_pkgdown_action","text":"activate Netlify Previews, must: Create new site Netlify. See https://docs.netlify.com/welcome/add-new-site/ details. \"Add netlify API site ID GitHub repository Action secrets NETLIFY_SITE_ID. See https://docs.netlify.com/api/get-started/#get-site details. Get developer token Netlify developer account settings add GitHub repository Action secrets NETLIFY_AUTH_TOKEN. See https://docs.netlify.com/cli/get-started/#obtain--token---netlify-ui details. See  pkgdown docs section PR previews details.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a basic hubverse README.Rmd from template — use_hubdev_readme","title":"Create a basic hubverse README.Rmd from template — use_hubdev_readme","text":"Create basic hubverse README.Rmd template","code":""},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a basic hubverse README.Rmd from template — use_hubdev_readme","text":"","code":"use_hubdev_readme(   organisation = \"hubverse-org\",   hubdocs_contribute_url =     \"https://hubverse.io/en/latest/overview/contribute.html\" )"},{"path":"https://hubverse-org.github.io/hubDevs/reference/use_hubdev_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a basic hubverse README.Rmd from template — use_hubdev_readme","text":"organisation Character string. hubverse GitHub organisation name. user's role token's scopes must permission create repositories hubverse organisation. hubdocs_contribute_url Character string. URL general contributing information page hubDocs.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/news/index.html","id":"hubdevs-0009004","dir":"Changelog","previous_headings":"","what":"hubDevs 0.0.0.9004","title":"hubDevs 0.0.0.9004","text":"Fixed bug README template requiring svg logo instead png logo.","code":""},{"path":"https://hubverse-org.github.io/hubDevs/news/index.html","id":"hubdevs-0009003","dir":"Changelog","previous_headings":"","what":"hubDevs 0.0.0.9003","title":"hubDevs 0.0.0.9003","text":"Added functionality use_hubdev_pkgdown() enable smooth transition package docs hubStyle theme. Added append_hubdev_readme_footer() append standard hubverse footer README.md file.","code":""}]
